		
		sur::ParticlesSetting set;
	for (int i = 20; i < 255; i++) {
		set.colors.push_back(Color(i/ 2, i, 255 ));
	}
	set.max_distance_to_middle = 200;
	set.emission = 5000;
	set.emission_point_min(250, 250);
	set.emission_point_max(250, 250);
	set.noise_factor = 1;
	set.block_directions.push_back(Direction::None);
	sur::Particles a(&set);	
		
		
		
		a.Bind(true);
		if(_input.mouse.RClick())
			a.MoveTowards(_input.mouse.Position(),6);
		set.middle = a.GetPosition();
		if (_input.keyboard.Key(Keys::A)) {
			sur::Vec2f dir(sur::Direction(_input.mouse.Position(), a.GetPosition()));
			a.Move(dir * 2);
		}
		if (_input.keyboard.Key(Keys::D)) {
			sur::Vec2f dir(sur::Direction(_input.mouse.Position(), a.GetPosition()));
			dir.invert();
			a.Move(dir * 2);
		}			
		if (_input.keyboard.Key(Keys::W))
			set.max_distance_to_middle++;
		if (_input.keyboard.Key(Keys::S))
			set.max_distance_to_middle--;
		if (_input.keyboard.Key(Keys::G))
			set.noise_factor++;
		if (_input.keyboard.Key(Keys::H))
			if (set.noise_factor <= 0)
				set.noise_factor = 0;
			else
				set.noise_factor--;